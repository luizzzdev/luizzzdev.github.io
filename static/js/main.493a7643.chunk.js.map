{"version":3,"sources":["Button/button.module.css","Card/card.module.css","Contador/contador.module.css","Button/Button.js","Contador/Contador.js","Usuario/Usuario.js","Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","componentClasses","classes","button","warning","type","primary","danger","className","classNames","children","Contador","useState","contador","setContador","index","onClick","onChange","contagem","unidadePorClique","prevState","style","marginLeft","onDelete","Usuario","console","log","endereco","nome","Card","container","App","contadores","setContadores","setUnidadePorClique","removerContador","idContador","filter","id","nomeNomeDoUsuario","length","meuCallback","novaContagem","contadoresAntigos","map","toUpperCase","htmlFor","event","Number","target","value","contadoresAtuais","concat","Date","getTime","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.493a7643.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__10pSM\",\"danger\":\"button_danger__eyenl\",\"primary\":\"button_primary__e5caP\",\"warning\":\"button_warning__2dspf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__2CmLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"botaoAdicionar\":\"contador_botaoAdicionar__SjnsH\"};","import classNames from \"classnames\";\nimport classes from \"./button.module.css\";\n\n/**\n * props\n * props.type => 'primary', 'danger', 'warning'\n */\nexport function Button(props) {\n  const componentClasses = [\n    classes.button,\n    {\n      [classes.warning]: props.type === \"warning\",\n      [classes.primary]: props.type === \"primary\",\n      [classes.danger]: props.type === \"danger\",\n      // 'warning_213X5123': false\n    },\n  ];\n\n  return (\n    <button {...props} className={classNames(componentClasses)}>\n      {props.children}\n    </button>\n  );\n}\n","// 1\n// import -> esModules -> novo\n// import React from 'react'\n\n// 2\n// require -> CommonJS -> velho\n// const React = require('react')\n\n// import React from 'react'\n// import { useState } from 'react'\n// const name = 'luiz'\n// export default name // -> sem chavinha\n// export name // -> com chavinha\n\nimport { useState } from \"react\";\nimport { Button } from \"../Button/Button\";\nimport classes from \"./contador.module.css\";\n\n// const minhasClasses = {\n//   nomeDaClasseQueVoceUsouLaNoArquivoCSS: '...'\n// }\n\n// 1. estado -> statefull -> com estado\n// 2. props -> stateless (exibicional) -> sem estado\n\n/**\n * unidadePorClique\n * onDelete\n * index\n * onChange\n */\nfunction Contador(props) {\n  // props.unidadePorClique\n  const [contador, setContador] = useState(0);\n\n  const subtrair = () => {\n    props.onChange(props.contagem - props.unidadePorClique, props.index);\n    // setContador(contador - props.unidadePorClique);\n    setContador((prevState) => prevState - props.unidadePorClique);\n  };\n\n  const adicionar = () => {\n    props.onChange(props.contagem + props.unidadePorClique, props.index);\n    setContador(contador + props.unidadePorClique);\n  };\n\n  const meuStilo = {};\n  // background-color -> backgroundColor\n  // border-radius -> borderRadius\n  // margin -> margin\n  // margin-top -> marginTop\n\n  // ESSA É A FUNÇÃO DO COMPONENTE CONTADOR\n  const onDelete = () => {\n    // ESTOU CHAMANDO A FUNCAO QUE \"MEU PAI\" ME PASSOU\n    props.onDelete(props.index);\n  };\n\n  return (\n    <div>\n      <h3>Contador no {props.index}</h3>\n      <Button onClick={subtrair} type=\"warning\">\n        -\n      </Button>\n      <span>{props.contagem}</span>\n      <Button onClick={adicionar} type=\"primary\">\n        +\n      </Button>\n\n      <Button style={{ marginLeft: \"20px\" }} onClick={onDelete} type=\"danger\">\n        Del\n      </Button>\n    </div>\n  );\n}\n\n// legal colocar embaixo quando usamos PropTypes\nexport default Contador;\n\n/**\n * 1. classes\n * 2. css modules\n * 3. css inline -> style=\"background-color: tomato;\"\n * 4. styled components\n * 5. varias outras....\n */\n\n/**\n * cases\n * 1 - camelCase -> camelCase\n * 2 - PascalCase -> PascalCase\n * 3 - snake_case (python <3)\n * 4 - kebab-case\n */\n","export const Usuario = (props) => {\n  console.log(props.endereco);\n\n  return (\n    <>\n      <h1>Hello {props.nome}</h1>\n    </>\n  );\n};\n","import classes from \"./card.module.css\";\n\nexport function Card(props) {\n  return <div className={classes.container}>{props.children}</div>;\n}\n","import { useState } from \"react\";\nimport Contador from \"./Contador/Contador\";\nimport { Usuario } from \"./Usuario/Usuario\";\nimport Flex from \"./Flex/Flex\";\nimport { Card } from \"./Card/Card\";\n\n/**\n * Contador:\n * {\n *    descricao: 'Quantas vezes fui ao mercado na semana',\n *    dataCriacao: '',\n *   contagem: 0,\n *   id: 1\n * }\n *\n * [GET] /contadores\n * [PUT] /contadores/:id { ... }\n *\n * [\n * {...}\n *\n * ]\n *\n * [1312321,213213123,31231221,412312321,513123213] => não vamos conseguir persistir o ultimo de contagem\n */\n\nfunction App() {\n  /**\n   * 1. Renderizar vários contadores\n   * 2. Um botão para adicionar um contador novo\n   * 3. Input para armazenar a unidade por contador\n   */\n\n  // -> essa é a abordagem por array\n  const [contadores, setContadores] = useState([]);\n  // fazer uma lista de identificadores\n  // [131231221421312312, 387263187631287362, 329863127836232]\n  const [unidadePorClique, setUnidadePorClique] = useState(1);\n\n  // -> implementar abordagem por numero\n  // const [quantidadeContres, setQuantidadeContadores] = useState(0)\n\n  const adicionarContador = () => {\n    // .push(<Contador />) -> altera o array original\n    // .concat(<Contador />) -> nao altera o array original\n    // setContadores()\n    setContadores((contadoresAtuais) =>\n      contadoresAtuais.concat({\n        id: new Date().getTime(),\n        contagem: 0,\n      })\n    );\n  };\n\n  console.log(contadores);\n\n  const nomeDaClasse = \"button\";\n\n  // addEventListener('onChange', function(event) { event.target.value })\n  const handleOnChange = (event) => {\n    // console.log(event.target.value);\n    // Number(), parseInt(), +event.target.value\n    setUnidadePorClique(Number(event.target.value));\n  };\n\n  // ESSA EH A FUNCAO QUE VOU PASSAR PARA O CONTADOR\n  const removerContador = (idContador) => {\n    console.log(`opa, bora remover esse contador ${idContador}`);\n\n    // recebe o estado\n    // retorna o novo\n\n    setContadores((contadores) => {\n      return contadores.filter((contador) => contador.id !== idContador);\n    });\n  };\n\n  // string\n  let nomeNomeDoUsuario = \"\";\n\n  if (contadores.length > 1) {\n    nomeNomeDoUsuario = \"Fernando\";\n  } else {\n    nomeNomeDoUsuario = \"Luiz\";\n  }\n\n  const meuCallback = (novaContagem, idContador) => {\n    setContadores((contadoresAntigos) => {\n      return contadoresAntigos.map((contador) => {\n        if (contador.id === idContador) {\n          return {\n            ...contador,\n            contagem: novaContagem,\n          };\n        }\n\n        return contador;\n      });\n    });\n  };\n\n  return (\n    <div>\n      <Usuario nome={nomeNomeDoUsuario.toUpperCase()} />\n      <label htmlFor=\"unidadePorClique\">Unidade</label>\n      <input\n        id=\"unidadePorClique\"\n        type=\"text\"\n        onChange={handleOnChange}\n        value={unidadePorClique}\n      />\n\n      <button className={nomeDaClasse} onClick={adicionarContador}>\n        Adicionar contador\n      </button>\n      {/* {contadores.map((contador) => contador)} */}\n      {contadores.map((contador) => (\n        /**\n         * id: number\n         * contagem: number\n         */\n        <div style={{ padding: 20 }} key={contador.id}>\n          <Card>\n            <Contador\n              unidadePorClique={unidadePorClique}\n              onDelete={removerContador}\n              index={contador.id}\n              contagem={contador.contagem}\n              onChange={meuCallback}\n            />\n          </Card>\n        </div>\n      ))}\n\n      {/* <div>\n        <Flex flexDirection=\"batata\">\n          <div>\n            <h1>Hello world</h1>\n          </div>\n        </Flex>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// vue -> .vue -> html, javascript, css\n// angular -> .html, javascript, .ts\n// react -> .js , e o que ce quiser pro css ....\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// JSX\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}